module HexHELO( input [2:0] C; output [0:6] Hex);
//if you want a segment turned off keep the assignment else comment it out.
assign Hex[0]=(~C[0]&~C[1]&~C[2])|
			  ( C[0]&~C[1]&~C[2])|
			  (~C[0]& C[1]&~C[2])|
			  ( C[0]& C[1]&~C[2])|
			  (~C[0]&~C[1]& C[2])|
			  ( C[0]&~C[1]& C[2])|
			  (~C[0]& C[1]& C[2])|
			  ( C[0]& C[1]& C[2]);
assign Hex[1]=(~C[0]&~C[1]&~C[2])|
			  ( C[0]&~C[1]&~C[2])|
			  (~C[0]& C[1]&~C[2])|
			  ( C[0]& C[1]&~C[2])|
			  (~C[0]&~C[1]& C[2])|
			  ( C[0]&~C[1]& C[2])|
			  (~C[0]& C[1]& C[2])|
			  ( C[0]& C[1]& C[2]);
assign Hex[2]=(~C[0]&~C[1]&~C[2])|
			  ( C[0]&~C[1]&~C[2])|
			  (~C[0]& C[1]&~C[2])|
			  ( C[0]& C[1]&~C[2])|
			  (~C[0]&~C[1]& C[2])|
			  ( C[0]&~C[1]& C[2])|
			  (~C[0]& C[1]& C[2])|
			  ( C[0]& C[1]& C[2]);
assign Hex[3]=(~C[0]&~C[1]&~C[2])|
			  ( C[0]&~C[1]&~C[2])|
			  (~C[0]& C[1]&~C[2])|
			  ( C[0]& C[1]&~C[2])|
			  (~C[0]&~C[1]& C[2])|
			  ( C[0]&~C[1]& C[2])|
			  (~C[0]& C[1]& C[2])|
			  ( C[0]& C[1]& C[2]);
assign Hex[4]=(~C[0]&~C[1]&~C[2])|
			  ( C[0]&~C[1]&~C[2])|
			  (~C[0]& C[1]&~C[2])|
			  ( C[0]& C[1]&~C[2])|
			  (~C[0]&~C[1]& C[2])|
			  ( C[0]&~C[1]& C[2])|
			  (~C[0]& C[1]& C[2])|
			  ( C[0]& C[1]& C[2]);
assign Hex[5]=(~C[0]&~C[1]&~C[2])|
			  ( C[0]&~C[1]&~C[2])|
			  (~C[0]& C[1]&~C[2])|
			  ( C[0]& C[1]&~C[2])|
			  (~C[0]&~C[1]& C[2])|
			  ( C[0]&~C[1]& C[2])|
			  (~C[0]& C[1]& C[2])|
			  ( C[0]& C[1]& C[2]);
assign Hex[6]=(~C[0]&~C[1]&~C[2])|
			  ( C[0]&~C[1]&~C[2])|
			  (~C[0]& C[1]&~C[2])|
			  ( C[0]& C[1]&~C[2])|
			  (~C[0]&~C[1]& C[2])|
			  ( C[0]&~C[1]& C[2])|
			  (~C[0]& C[1]& C[2])|
			  ( C[0]& C[1]& C[2]);



endmodule